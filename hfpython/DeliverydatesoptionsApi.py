#!/usr/bin/env python
"""
DeliverydatesoptionsApi.py
Copyright 2015 Reverb Technologies, Inc.

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

NOTE: This class is auto generated by the swagger code generator program. Do not edit the class manually.
"""
import sys
import os
from urllib.parse import quote

from .models import *


class DeliverydatesoptionsApi(object):

    def __init__(self, apiClient):
      self.apiClient = apiClient

    
    
    def getDeliveryDatesOptions(self, **kwargs):
        r"""Get the delivery Dates and their delivery options In case of food box by zip code, product and\n     *              product family, in case of wine box, by shipping address, billing address,\n     *              birthday, product, and product family

        Args:
            
            zip, str: The postal/zip code of the address where the box needs to be shipped (required)
            
            
            product, str: The product sku that you&#39;d like to get the delivery dates and options for (required)
            
            
            country, str: Country code(s). Usage: ?country=DE,US (required)
            
            
            family, str: The product family handle that you&#39;d like to get the delivery dates and options for\n     *                    (optional since the family can be loaded from product sku) (required)
            
            
            numDeliveries, int: Number of deliveries to retrieve, by default 2 (required)
            
            
            locale, str: Locale. Usage: ?locale=fr-BE (required)
            
            
        
        Returns: ApiModel\DeliveryDate\DeliveryDateCollection
        """

        allParams = ['zip', 'product', 'country', 'family', 'numDeliveries', 'locale']

        params = locals()
        for key, val in params['kwargs'].items():
            if key not in allParams:
                raise TypeError("Got an unexpected keyword argument '%s' to method getDeliveryDatesOptions" % key)
            params[key] = val
        del params['kwargs']

        resourcePath = '/delivery_dates_options'
        resourcePath = resourcePath.replace('{format}', 'json')
        method = 'GET'

        queryParams = {}
        headerParams = {}
        formParams = {}
        files = {}
        bodyParam = None

        headerParams['Accept'] = 'application/json'
        headerParams['Content-Type'] = 'application/json'

        
        if 'zip' in params:
            queryParams['zip'] = self.apiClient.toPathValue(params['zip'])
        
        if 'family' in params:
            queryParams['family'] = self.apiClient.toPathValue(params['family'])
        
        if 'product' in params:
            queryParams['product'] = self.apiClient.toPathValue(params['product'])
        
        if 'numDeliveries' in params:
            queryParams['numDeliveries'] = self.apiClient.toPathValue(params['numDeliveries'])
        
        if 'country' in params:
            queryParams['country'] = self.apiClient.toPathValue(params['country'])
        
        if 'locale' in params:
            queryParams['locale'] = self.apiClient.toPathValue(params['locale'])
        

        

        

        

        

        postData = formParams if formParams else bodyParam

        response = self.apiClient.callAPI(resourcePath, method, queryParams,
                                          postData, headerParams, files=files)

        
        if not response:
            return None

        responseObject = self.apiClient.deserialize(response, r'ApiModel\DeliveryDate\DeliveryDateCollection')
        return responseObject
        
        
        
    


