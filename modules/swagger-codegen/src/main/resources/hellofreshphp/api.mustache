{{#operations}}<?php

namespace HelloFresh\HelloFreshClient\Purpose;

use HelloFresh\HelloFreshClient\Deserializer;
use HelloFresh\HelloFreshClient\HelloFreshResponse;
use HelloFresh\HelloFreshClient\AbstractHelloFreshPurpose;
use HelloFresh\BaseClient\HttpInterface;

class {{classname}} extends AbstractHelloFreshPurpose
{

{{#operation}}
    /**
     * Nickname: {{{nickname}}}
     *
     * {{{summary}}}
     *
     * Parameters:
     *
{{#allParams}}     *    - `{{dataType}} ${{paramName}} {{description}} {{^optional}}(required){{/optional}}{{#optional}}(optional){{/optional}}`
{{/allParams}}
     *
     * @param  array $parameters
     * @return HelloFreshResponse
     */
    public function {{nickname}}(array $parameters = [])
    {
        $this->attachClientCredentials($parameters);

        if ('{{httpMethod}}' === HttpInterface::GET) {
            $options = [
                'query' => $parameters,
            ];
        } else {
            $options = [
                'body' => $parameters,
            ];
        }

        {{#returnType}}
        $options[$this->client::RESPONSE_MODEL] = '{{returnType}}';
        {{/returnType}}

        return $this->client->{{lcHttpMethod}}('{{path}}', $options);
    }

{{/operation}}
}{{/operations}}
