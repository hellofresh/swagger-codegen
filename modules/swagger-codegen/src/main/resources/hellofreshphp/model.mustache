<?php {{#models}}{{#model}}

namespace {{namespaceName}};

use HelloFresh\BaseClient\ModelInterface;

class {{classname}} implements ModelInterface
{

    /**
     * Array of swaggertypes
     *
     * @var array
     */
    public static $swaggerTypes = [
        {{#vars}}'{{name}}' => '{{{datatype}}}'{{#hasMore}},
        {{/hasMore}}{{/vars}}
    ];
    {{#vars}}{{#description}}
    /**
     * Property {{name}}
     *{{#description}} {{{description}}}{{/description}}
     * @var {{datatype}}
     */{{/description}}
    public ${{name}};
    {{/vars}}

    /**
     * @return array
     */
    public function toArray()
    {
        $entity = [];

        foreach (self::$swaggerTypes as $name => $type) {
            if (starts_with($name, 'HelloFresh\\HelloFreshClient\\Entities') && class_exists($name)) {
                $entity[$name] = $this->$name->toArray();
            } else {
                $entity[$name] = $this->$name;
            }
        }

        return $entity;
    }

    /**
     * @param  integer $options
     * @return string
     */
    public function toJson($options = 0)
    {
        return json_encode($this->toArray(), $options);
    }
}
{{/model}}
{{/models}}
